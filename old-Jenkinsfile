def remote = [:]
remote.name = "bkc-explorer"
remote.host = "47.241.216.76"
remote.allowAnyHosts = true

node {
    withCredentials([sshUserPrivateKey(credentialsId: 'internal_explorer_test', keyFileVariable: 'identity', passphraseVariable: 'passPhrase', usernameVariable: 'userName')]) {
        remote.user = userName
        remote.identityFile = identity
        remote.passphrase = passPhrase
        stage("SSH Steps Rocks!") {
            writeFile file: 'abc.sh', text: 'ls'
            sshCommand remote: remote, command: 'for i in {1..5}; do echo -n \"Loop \$i \"; date ; sleep 1; done'
            sshCommand remote: remote, command: 'pwd; ls'
            sshCommand remote: remote, command: 'mkdir jenkins; echo "Jenkins works" > jenkins/test.txt'
            sshPut remote: remote, from: 'abc.sh', into: '.'
            sshGet remote: remote, from: 'abc.sh', into: 'bac.sh', override: true
            sshScript remote: remote, script: 'abc.sh'
            sshRemove remote: remote, path: 'abc.sh'
        }
    }
}

pipeline{  
  environment {
    EXPLORER_IMAGE = "bkc-explorer"
    def remote = [:]
    remote.name = "bkc-explorer"
    remote.host = "47.241.216.76"
    remote.allowAnyHosts = true
    //registry = ""
    //registryCredential = ''
    //dockerImage = ''
  }
  node
    stages {
        stage('Create Temp Config'){
           steps{
              script{
//		withCredentials([file(credentialsId: 'ghsecret', variable: '')]) {
//		} 
		sh 'ls'
		echo ">> Making temporary Dockerfile"
		sh 'cp docker/Dockerfile Dockerfile'
		
              } 
           }   
        }
    stage('Build Docker image'){
           steps{
              script{
		sh 'docker images'
                echo "$EXPLORER_IMAGE"
                
              }
           }
        }
    stage('Remove Temp Config'){
           steps{
              script{
                sh 'ls'
                echo ">> Removing temporary Dockerfile"
                sh 'rm Dockerfile'
              }
           }
        }
    }
}
