2021-06-02T09:10:14.213 application=file_system [error] `inotify-tools` is needed to run `file_system` for your system, check https://github.com/rvoicilas/inotify-tools/wiki for more information about how to install it. If it's already installed but not be found, appoint executable file with `config.exs` or `FILESYSTEM_FSINOTIFY_EXECUTABLE_FILE` env.
2021-06-02T09:10:14.382 application=phoenix [error] Could not start node watcher because script "/app/apps/block_scout_web/assets/node_modules/webpack/bin/webpack.js" does not exist. Your Phoenix application is still running, however assets won't be compiled. You may fix this by running "npm install" inside the "assets" directory.
2021-06-02T09:10:19.187 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:10:24.191 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:10:29.218 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:10:34.223 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:10:39.193 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:10:44.211 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:10:49.238 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:10:54.244 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:10:59.248 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:11:04.252 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:11:09.224 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:11:14.154 fetcher=block_catchup [error] Task #PID<0.765.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T09:11:14.156 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T09:11:14.229 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:11:14.380 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:11:14.422 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:11:14.423 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:11:14.428 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:11:14.453 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:11:14.454 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:11:14.474 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:11:14.475 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:11:14.484 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:11:14.487 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:11:14.513 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:11:14.513 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T09:11:14.527 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:11:14.527 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T09:11:14.533 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:11:14.533 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T09:11:15.153 application=indexer fetcher=pending_transaction [error] timeout
2021-06-02T09:11:19.258 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:11:24.280 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:11:29.291 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:11:34.295 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:11:39.266 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:11:44.274 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:11:49.280 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:27:33.249 application=file_system [error] `inotify-tools` is needed to run `file_system` for your system, check https://github.com/rvoicilas/inotify-tools/wiki for more information about how to install it. If it's already installed but not be found, appoint executable file with `config.exs` or `FILESYSTEM_FSINOTIFY_EXECUTABLE_FILE` env.
2021-06-02T09:27:33.722 application=phoenix [error] Could not start node watcher because script "/app/apps/block_scout_web/assets/node_modules/webpack/bin/webpack.js" does not exist. Your Phoenix application is still running, however assets won't be compiled. You may fix this by running "npm install" inside the "assets" directory.
2021-06-02T09:27:37.987 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:27:43.086 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:27:48.116 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:27:53.134 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:27:58.165 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:28:03.315 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:28:08.324 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:28:13.400 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:28:18.415 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:28:23.457 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:28:28.469 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:28:32.984 fetcher=block_catchup [error] Task #PID<0.755.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T09:28:32.994 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T09:28:33.167 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:28:33.214 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:28:33.239 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:28:33.250 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:28:33.254 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:28:33.280 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:28:33.280 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:28:33.315 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:28:33.326 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:28:33.333 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:28:33.337 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:28:33.463 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:28:33.466 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T09:28:33.510 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T09:28:33.562 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:28:33.618 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T09:28:33.641 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T09:28:33.997 application=indexer fetcher=pending_transaction [error] timeout
2021-06-02T09:28:38.710 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:28:43.815 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:28:48.824 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:28:53.920 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:28:58.930 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:29:03.944 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T09:29:08.920 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:14:14.583 application=file_system [error] `inotify-tools` is needed to run `file_system` for your system, check https://github.com/rvoicilas/inotify-tools/wiki for more information about how to install it. If it's already installed but not be found, appoint executable file with `config.exs` or `FILESYSTEM_FSINOTIFY_EXECUTABLE_FILE` env.
2021-06-02T10:14:19.518 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:14:24.572 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:14:29.580 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:14:34.592 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:14:39.571 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:14:44.639 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:14:49.651 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:14:54.704 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:14:59.714 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:15:04.721 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:15:09.709 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:15:14.523 fetcher=block_catchup [error] Task #PID<0.754.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T10:15:14.529 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T10:15:14.651 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:15:14.670 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:15:14.672 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:15:14.679 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:15:14.690 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:15:14.707 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:15:14.712 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:15:14.719 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:15:14.731 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:15:14.812 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:15:14.819 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:15:14.891 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:15:14.892 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:15:14.964 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:15:14.965 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:15:14.965 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:15:14.965 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:15:15.532 application=indexer fetcher=pending_transaction [error] timeout
2021-06-02T10:15:20.020 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:15:25.038 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:15:30.049 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:15:35.055 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:15:40.037 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:15:45.041 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:15:50.083 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:15:55.097 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:16:00.101 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:16:05.106 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:16:10.078 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:16:14.862 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:16:14.863 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:16:15.081 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:27:44.628 application=file_system [error] `inotify-tools` is needed to run `file_system` for your system, check https://github.com/rvoicilas/inotify-tools/wiki for more information about how to install it. If it's already installed but not be found, appoint executable file with `config.exs` or `FILESYSTEM_FSINOTIFY_EXECUTABLE_FILE` env.
2021-06-02T10:27:49.631 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:27:54.781 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:27:59.794 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:28:04.804 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:28:09.783 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:28:14.806 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:28:19.829 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:28:24.868 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:28:29.960 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:28:34.970 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:28:39.956 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:28:44.608 fetcher=block_catchup [error] Task #PID<0.755.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T10:28:44.616 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T10:28:44.982 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:28:45.085 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:28:45.085 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:28:45.085 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:28:45.085 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:28:45.086 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:28:45.086 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:28:45.086 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:28:45.106 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:28:45.106 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:28:45.106 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:28:45.325 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:28:45.326 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:28:45.373 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:28:45.410 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:28:45.617 application=indexer fetcher=pending_transaction [error] timeout
2021-06-02T10:28:45.674 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:28:45.734 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:28:50.081 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:28:55.103 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:29:00.221 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:29:05.234 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:29:10.211 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:29:15.236 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:29:20.269 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:29:25.275 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:29:30.286 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:29:35.294 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:29:40.280 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:29:45.268 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:29:45.269 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:29:45.293 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:29:50.327 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:29:55.340 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:30:00.348 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:30:05.353 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:30:05.516 fetcher=block_catchup [error] Task #PID<0.8476.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T10:30:05.523 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T10:38:46.332 application=file_system [error] `inotify-tools` is needed to run `file_system` for your system, check https://github.com/rvoicilas/inotify-tools/wiki for more information about how to install it. If it's already installed but not be found, appoint executable file with `config.exs` or `FILESYSTEM_FSINOTIFY_EXECUTABLE_FILE` env.
2021-06-02T10:38:51.145 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:38:56.271 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:39:01.282 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:39:06.346 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:39:11.365 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:39:16.407 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:39:21.413 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:39:26.420 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:39:31.427 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:39:36.400 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:39:41.412 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:39:46.108 fetcher=block_catchup [error] Task #PID<0.755.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T10:39:46.116 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T10:39:46.240 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:39:46.241 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:39:46.241 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:39:46.242 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:39:46.243 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:39:46.243 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:39:46.246 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:39:46.246 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:39:46.255 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:39:46.256 application=ethereum_jsonrpc [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:39:46.427 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:39:46.622 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:39:46.631 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:39:46.735 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:39:46.735 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:39:46.808 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:39:46.831 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:39:47.127 application=indexer fetcher=pending_transaction [error] timeout
2021-06-02T10:39:51.661 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:39:56.752 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:40:01.759 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:40:06.737 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:40:11.770 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:40:16.776 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:40:21.783 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:40:26.794 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:40:31.802 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:40:36.780 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:40:41.796 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:40:46.600 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:40:46.600 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:40:46.826 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:40:51.831 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:40:56.838 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:41:01.846 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:41:06.817 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:41:07.535 fetcher=block_catchup [error] Task #PID<0.8815.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T10:41:07.538 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T10:41:11.821 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:41:16.844 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:41:21.868 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:41:26.880 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:41:31.887 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:41:36.857 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:41:41.863 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:41:46.833 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:41:46.866 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:41:46.882 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:41:47.233 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:41:48.256 application=indexer fetcher=pending_transaction [error] timeout
2021-06-02T10:41:51.897 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:41:56.911 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:42:01.915 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:42:06.885 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:42:11.928 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:42:16.933 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:42:21.938 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:42:26.943 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:42:31.951 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:42:36.926 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:42:41.932 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:42:46.252 application=ethereum_jsonrpc fetcher=code [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:42:46.252 application=ethereum_jsonrpc fetcher=code [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:42:46.252 application=ethereum_jsonrpc fetcher=code [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:42:46.252 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:42:46.252 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:42:46.252 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:42:46.253 application=ethereum_jsonrpc fetcher=code [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:42:46.253 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:42:46.977 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:42:49.040 fetcher=block_catchup [error] Task #PID<0.10398.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T10:42:49.044 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T10:42:51.984 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:42:56.988 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:43:01.991 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:43:06.961 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:43:10.442 application=indexer fetcher=pending_transaction [error] timeout
2021-06-02T10:43:11.967 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:43:16.973 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:43:22.011 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:43:27.016 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:43:32.026 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:43:37.007 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:43:42.037 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:43:47.047 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:43:52.053 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:43:57.060 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:44:02.070 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:44:07.042 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:44:07.385 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:44:07.385 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:44:07.602 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:44:07.603 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:44:12.065 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:44:17.088 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:44:22.095 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:44:27.101 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:44:32.104 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:44:37.078 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:44:42.083 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:44:46.560 application=ethereum_jsonrpc count=51 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:44:47.116 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:44:52.130 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:44:57.138 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:45:02.147 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:45:06.871 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:45:06.872 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:45:07.119 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:45:08.692 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:45:08.695 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:45:11.444 application=indexer fetcher=pending_transaction [error] timeout
2021-06-02T10:45:12.126 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:45:17.134 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:45:22.175 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:45:27.180 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:45:32.186 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:45:34.508 fetcher=block_catchup [error] Task #PID<0.10439.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T10:45:34.511 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T10:45:37.155 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:45:42.196 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:45:46.636 application=ethereum_jsonrpc count=100 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:45:46.637 application=ethereum_jsonrpc count=100 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:45:46.642 application=ethereum_jsonrpc count=100 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:45:46.659 application=ethereum_jsonrpc count=100 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:45:46.672 application=ethereum_jsonrpc count=100 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:45:47.200 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:45:50.941 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:45:50.941 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:45:52.208 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:45:57.217 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:46:02.227 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:46:07.202 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:46:12.207 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:46:17.250 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:46:22.260 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:46:27.268 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:46:27.575 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:46:27.575 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:46:32.276 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:46:37.248 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:46:42.252 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:46:47.264 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:46:47.853 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:46:47.854 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:46:52.296 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:46:57.306 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:47:02.315 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:47:07.303 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:47:12.099 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:47:12.100 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:47:12.327 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:47:14.907 application=indexer fetcher=pending_transaction [error] timeout
2021-06-02T10:47:17.332 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:47:22.336 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:47:27.341 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:47:32.347 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:47:37.316 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:47:42.349 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:47:46.317 application=ethereum_jsonrpc fetcher=coin_balance count=500 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:47:46.318 application=indexer fetcher=coin_balance count=500 error_count=500 [error] failed to fetch: :timeout
2021-06-02T10:47:46.353 application=ethereum_jsonrpc fetcher=coin_balance count=500 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:47:46.353 application=indexer fetcher=coin_balance count=500 error_count=500 [error] failed to fetch: :timeout
2021-06-02T10:47:46.378 application=ethereum_jsonrpc fetcher=coin_balance count=500 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:47:46.378 application=indexer fetcher=coin_balance count=500 error_count=500 [error] failed to fetch: :timeout
2021-06-02T10:47:46.462 application=ethereum_jsonrpc fetcher=coin_balance count=500 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:47:46.463 application=indexer fetcher=coin_balance count=500 error_count=500 [error] failed to fetch: :timeout
2021-06-02T10:47:47.364 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:47:50.958 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:47:52.370 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:47:57.376 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:48:02.122 fetcher=block_catchup [error] Task #PID<0.10497.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T10:48:02.128 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T10:48:02.382 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:48:07.356 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:48:08.257 application=ethereum_jsonrpc fetcher=code [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:48:08.257 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:48:08.933 application=ethereum_jsonrpc fetcher=code [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:48:08.933 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:48:11.658 application=ethereum_jsonrpc fetcher=code [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:48:11.659 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:48:12.364 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:48:13.133 application=ethereum_jsonrpc fetcher=code [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:48:13.133 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:48:17.406 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:48:22.411 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:48:27.416 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:48:27.590 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:48:32.426 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:48:37.398 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:48:42.406 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:48:47.410 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:48:52.451 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:48:57.457 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:49:02.463 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:49:07.439 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:49:12.474 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:49:17.479 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:49:22.488 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:49:27.494 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:49:29.850 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:49:29.850 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:49:32.499 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:49:36.424 application=indexer fetcher=pending_transaction [error] timeout
2021-06-02T10:49:37.471 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:49:42.486 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:49:46.493 application=indexer fetcher=coin_balance count=500 error_count=500 [error] failed to fetch: :timeout
2021-06-02T10:49:47.513 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:49:50.979 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:49:52.519 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:49:57.526 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:50:02.131 fetcher=block_catchup [error] Task #PID<0.10552.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T10:50:02.134 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T10:50:02.531 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:50:07.503 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:50:08.261 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:50:08.938 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:50:11.665 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:50:12.508 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:50:13.138 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:50:17.532 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:50:22.556 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:50:27.561 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:50:27.600 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:50:32.568 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:50:37.538 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:50:42.541 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:50:47.544 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:50:52.580 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:50:57.590 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:51:02.601 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:51:07.577 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:51:12.617 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:51:17.626 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:51:17.878 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:51:17.878 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:51:20.612 application=indexer fetcher=pending_transaction [error] timeout
2021-06-02T10:51:22.634 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:51:27.641 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:51:32.650 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:51:34.966 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:51:34.966 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:51:37.618 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:51:42.545 fetcher=block_catchup [error] Task #PID<0.10598.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T10:51:42.549 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T10:51:42.622 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:51:47.657 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:51:47.657 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:51:47.662 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:51:49.912 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:51:49.912 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:51:52.675 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:51:57.679 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:52:02.688 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:52:07.662 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:52:12.669 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:52:17.678 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:52:22.717 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:52:27.725 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:52:32.733 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:52:37.714 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:52:42.744 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:52:47.750 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:52:52.759 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:52:57.765 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:53:02.769 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:53:04.816 application=indexer fetcher=pending_transaction [error] timeout
2021-06-02T10:53:07.743 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:53:12.767 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:53:17.791 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:53:22.796 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:53:27.806 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:53:32.811 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:53:37.784 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:53:38.277 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:53:38.277 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:53:42.789 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:53:47.819 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:53:49.925 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:53:52.832 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:53:57.836 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:54:02.695 fetcher=block_catchup [error] Task #PID<0.10818.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T10:54:02.697 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T10:54:02.844 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:54:07.816 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:54:12.826 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:54:17.829 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:54:22.867 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:54:26.909 application=indexer fetcher=pending_transaction [error] timeout
2021-06-02T10:54:27.885 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:54:32.890 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:54:35.510 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:54:35.510 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:54:37.865 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:54:42.904 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:54:47.914 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:54:49.770 application=ethereum_jsonrpc fetcher=code [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:54:49.770 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:54:51.591 application=ethereum_jsonrpc fetcher=code [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:54:51.591 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:54:52.924 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:54:53.703 application=ethereum_jsonrpc fetcher=code [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:54:53.703 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:54:53.857 application=ethereum_jsonrpc fetcher=code [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:54:53.858 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:54:57.927 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:55:02.930 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:55:07.903 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:55:12.912 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:55:17.952 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:55:22.962 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:55:27.968 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:55:30.376 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:55:30.376 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:55:32.974 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:55:37.946 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:55:42.950 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:55:44.688 fetcher=block_catchup [error] Task #PID<0.10868.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T10:55:44.689 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T10:55:47.965 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:55:53.000 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:55:58.008 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:56:03.016 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:56:08.005 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:56:13.028 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:56:18.034 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:56:19.399 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:56:19.400 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:56:23.041 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:56:28.047 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:56:31.276 application=indexer fetcher=pending_transaction [error] timeout
2021-06-02T10:56:33.055 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:56:34.966 application=ethereum_jsonrpc fetcher=internal_transaction count=10 [error] 413 Request Entity Too Large returned from single request batch.  Cannot shrink batch further.
2021-06-02T10:56:34.967 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:56:38.029 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:56:43.058 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:56:48.074 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:56:53.082 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:56:53.705 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:56:53.861 application=indexer fetcher=code error_count=10 [error] failed to fetch contract codes: :timeout
2021-06-02T10:56:58.089 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:57:03.094 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:57:08.063 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:57:13.072 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:57:18.108 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:57:23.115 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:57:28.121 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:57:30.393 application=indexer fetcher=internal_transaction count=10 error_count=10 [error] failed to fetch internal transactions for blocks: :timeout
2021-06-02T10:57:33.130 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:57:38.105 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:57:43.110 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:57:44.694 fetcher=block_catchup [error] Task #PID<0.11251.0> started from Indexer.Block.Catchup.BoundIntervalSupervisor terminating
** (MatchError) no match of right hand side value: {:error, :timeout}
    (indexer 0.1.0) lib/indexer/block/catchup/fetcher.ex:76: Indexer.Block.Catchup.Fetcher.task/1
    (elixir 1.11.4) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.11.4) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: &Indexer.Block.Catchup.Fetcher.task/1
    Args: [%Indexer.Block.Catchup.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :catchup, callback_module: Indexer.Block.Catchup.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, blocks_batch_size: 10, blocks_concurrency: 10, memory_monitor: Indexer.Memory.Monitor}]
2021-06-02T10:57:44.697 application=indexer fetcher=block_catchup [error] Catchup index stream exited with reason ({{:badmatch, {:error, :timeout}}, [{Indexer.Block.Catchup.Fetcher, :task, 1, [file: 'lib/indexer/block/catchup/fetcher.ex', line: 76]}, {Task.Supervised, :invoke_mfa, 2, [file: 'lib/task/supervised.ex', line: 90]}, {Task.Supervised, :reply, 5, [file: 'lib/task/supervised.ex', line: 35]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 226]}]}). Restarting
2021-06-02T10:57:48.116 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:57:53.156 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
2021-06-02T10:57:58.161 fetcher=block_realtime [error] GenServer Indexer.Block.Realtime.Fetcher terminating
** (stop) exited in: GenServer.call(Indexer.Block.Realtime.WebSocket, {:subscribe, "newHeads", []}, 5000)
    ** (EXIT) time out
    (elixir 1.11.4) lib/gen_server.ex:1027: GenServer.call/3
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:145: Indexer.Block.Realtime.Fetcher.subscribe_to_new_heads/2
    (indexer 0.1.0) lib/indexer/block/realtime/fetcher.ex:73: Indexer.Block.Realtime.Fetcher.handle_continue/2
    (stdlib 3.14.1) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.1) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.1) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, {:init, [transport: EthereumJSONRPC.WebSocket, transport_options: %EthereumJSONRPC.WebSocket{url: "ws://159.138.245.69:8546", web_socket: EthereumJSONRPC.WebSocket.WebSocketClient, web_socket_options: %EthereumJSONRPC.WebSocket.WebSocketClient.Options{event: nil, params: nil, web_socket: Indexer.Block.Realtime.WebSocket}}]}}
State: %Indexer.Block.Realtime.Fetcher{block_fetcher: %Indexer.Block.Fetcher{broadcast: :realtime, callback_module: Indexer.Block.Realtime.Fetcher, json_rpc_named_arguments: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://159.138.245.69:8545", http_options: [recv_timeout: 60000, timeout: 60000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], receipts_batch_size: 250, receipts_concurrency: 10}, max_number_seen: nil, previous_number: nil, subscription: nil, timer: nil}
